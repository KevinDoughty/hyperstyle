
animationForKey does not get called without registerAnimatableStyles
Makes it awkward animating a different key in response to change in another.
See copying example.


Karma has a Hyperstyle object but it has no functions
Problem was Webpack UMD build was resulting in an empty object
I had a multi-main entry but the problem seems fixed after I reverted to single file entry.

calc is getting inserted into result values.
I suspect delegate input & output is the problem, as always.
It's expecting an array but given a string, or vice versa,
and for some reason is appending index,
so "4px" becomes "calc(40 + p1 + x2)"

Need a manually created delegate.
Need to check every call to input and output while animating.
Need a variable to flip when it fails.

I don't want to make hyperStyleDelegate public, but then again, hyperreact needs it, right?

I suspect initial layer confusion.
It should be converted to ugly values, assuming original has pretty values.
I might be skipping that conversion

It might be that I'm skipping the call to registerAnimatableProperty which does that conversion.



STYLE:
Breaking out styles into Hyperstyle, attempt.
Want the minimum amount of changes from web-animations.
If possible, that would mean just using _set() and _clear()
Maybe on the delegate or something.
That would mean rethinking presentation layer.
Or exposing a layer below that,
Maybe allowing for animating a single property only.
That means allowing mutation if configured that way.
Does HyperAnimatedStyleObject expose presentationLayer?
Delegate should have option to return model, presentation and render layers.
Actually model layer is passed in init, maybe two more arguments at the end.
If you passed in the presentation layer at init, it would only ever mutate the same object?


INPUT / OUTPUT:
Implementing input output on the type object is better than implementing in delegate.
This needs to happen before implementing matrix3d because of the errors.
Main usage probably as React Animated & React-Motion style value transformer.
You absolutely need this for user to not have to reimplement HyperStyleDelegate.
The order should be type object first, then delegate object.
Unfortunately this would require a type object during registerAnimatableProperty.
You would then need to reconsider automatic registration.

Layer stores ugly values which are independent of animations.


MATRICES:
Web-Animations converting transforms back to strings happens in mergeTransforms,
with type information kept in scope so it doesn't have to be re-calculated every time.
This is probably a significant optimization.
You could willy-nilly store information on the animation object.

On second though, optimization is probably not that important, it is easy to convert from ugly to pretty.

I should have created a new git branch.


REGISTER:
Should register be automatic?
Problem with type input/output

Happens in element.js prepareDocument
Style.js and element.js need an overhaul,
I now want to register all style properties to trigger transform animation on change in left/top


Error in style.js, that is not an ugly value
~~~~~~ HyperStyleDelegate.animationForKey:transform; uglyV:"translate3d(431.0132742644374px,0.8792254958707857px,0px)"; uglyP:""; prettyV:translate3d(431.0132742644374px,0.8792254958707857px,0px); prettyP:; result:undefined;



TESTING:
Absolutely need in browser or headless for css style.
In browser could double for compatibility with available features, like raf or performance now.
I might want to break styles out into a separate package,
especially if with a large dependency like phantom.js
Why did I give up on hyperstyle and just merge styles here?
I would only need to expose animationFromDescription
Many examples use styles, transaction example could belong to both



You can't enumerate the style object like you think.
The property index numbers are enumerable.
I need that function.
